<?php


# this function is the menu handler for our drupal form/module.
# it is an implementation of the Drupal hook_menu function.
function ajax_example_menu() {
  $items['ajax_example/form'] = array(
    'title' => t('My first Drupal form'),
    'page callback' => 'ajax_example_form',
    'access arguments' => array('access content'),
    'description' => t('My first Drupal form'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

# the "callback" function; when the menu item or url is
# accessed, this function will be called
# drupal_get_form = drupal_map_assoc
function ajax_example_form() {
  return drupal_get_form('ajax_example_form1');
}

# our drupal form "form builder" function
function ajax_example_form1($form,$form_state) {
	

$options_first = FirstDropdownOptions();
$options_second = SecondDropdownOptions();
$options_third = ThirdDropdownOptions();
$selected = isset($form_state['values']['dropdown_first']) ? $form_state['values']['dropdown_first']:key($options_first);
$selected1 = isset($form_state['values']['dropdown_second']) ? $form_state['values']['dropdown_second']:key($options_second);
$selected2 = isset($form_state['values']['dropdown_third']) ? $form_state['values']['dropdown_third']:key($options_third);

	$form['dropdown_first'] = array(
		'#type' => 'select',
		'#title' => 'Instrument Type',
		'#options' => $options_first,
		'#default_value' => $selected,

		'#ajax' => array(
		'callback' => 'ajax_example_dependent_dropdown_callback',
		'wrapper' => 'dropdown-second-replace',
		),
	);
	
	$form['dropdown_second'] = array(
		'#type' => 'select',
		'#title' => $options_first[$selected1] . ' ' . t('Instruments'),
		'#prefix' => '<div id="dropdown-second-replace">',
		'#suffix' => '</div>',
		'#options' => SecondDropdownOptions($selected1),
		'#default_value' => $selected,
		
		'#ajax' => array(
		'callback' => 'ajax_example_dependent_dropdown_callback',
		'wrapper' => 'dropdown-third-replace',
		),
	);
	
	$form['dropdown_third'] = array(
		'#type' => 'select',
		'#title' => 'Instrument Type',
		'#prefix' => '<div id="dropdown-third-replace">',
		'#suffix' => '</div>',
		'#options' => ThirdDropdownOptions($selected2),
		'#default_value' => $selected,

		'#ajax' => array(
		'callback' => 'ajax_example_dependent_dropdown_callback',
		'wrapper' => 'dropdown-fourth-replace',
		),
	);
		
	$form['submit'] = array(
	'#type' => 'submit',
	'#value' => t('Submit'),
	);

	
  return $form;
}

function ajax_example_dependent_dropdown_callback($form, $form_state) {
	if(isset($form_state['value']['dropdown_first']) ? $form_state['value']['dropdown_first']:key($options_first)){
		return $form['dropdown_first'];
	}
	else{
		return $form['dropdown_second'];
	}
}
/*
   $DropDown1=$form['dropdown_second']; 
   $Dropdown2=$form['dropdown_third'];
   $DropdownArray = array($DropDown1,$Dropdown2);
   return $DropdownArray;
  */

function FirstDropdownOptions() {
  // drupal_map_assoc() just makes an array('String' => 'String'...).
  return drupal_map_assoc(
    array(
      t('City'),
      t('StateName'),
      t('PropertyName'),
      t('Address'),
    )
  );
}

function SecondDropdownOptions($key = '') {
	$selCity = db_query('SELECT city FROM {site_list}')->fetchCol();
  $options = array(
    t('City') => drupal_map_assoc(
      array(
        $selCity,
      )
    ),
  );
  if (isset($options[$key])) {
    return $options[$key];
  }
  else {
    return array();
  }
  return $form;
}


function ThirdDropdownOptions($key = '') {
	$selStateName = db_query('SELECT customer FROM {site_list}')->fetchCol();
  $options = array(
    t('StateName') => drupal_map_assoc(
      array(
        $selStateName,
      )
    ),
  );
  if (isset($options[$key])) {
    return $options[$key];
  }
  else {
    return array();
  }
  return $form;
}

# our drupal form submit handler (using a submit handler
# given by the default naming convention, i.e.,
# 'ajax_example_form1' plus '_submit')
function ajax_example_form1_submit($form, &$form_state) {
  drupal_set_message(t('The form has been submitted.'));
}

?>